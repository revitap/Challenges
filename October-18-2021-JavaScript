/*
1) This robot roams around a 2D grid. It starts at (0, 0) facing North. 
After each time it moves, the robot rotates 90 degrees clockwise. 
Given the amount the robot has moved each time, you have to calculate the robot's final position.
*/
function trackRobot(steps) {
    let position = [0, 0];
    for (let i = 0; i < steps.length; i++) {
      let dir = i % 4;
      switch (dir) {
        case 0:
          position = [position[0], position[1] + steps[i]];
          break;
        case 1:
          position = [position[0] + steps[i], position[1]];
          break;
        case 2:
          position = [position[0], position[1] - steps[i]];
          break;
        case 3:
          position = [position[0] - steps[i], position[1]];
          break;
      }
    }
    return position;
}

/*
2) Create a function that takes the dimensions of two triangles (as arr1ays)
and checks if the first triangle fits into the second one.

Examples:
doesTriangleFit([1, 1, 1], [1, 1, 1]) ➞ true

doesTriangleFit([1, 1, 1], [2, 2, 2]) ➞ true

doesTriangleFit([1, 2, 3], [1, 2, 2]) ➞ false

doesTriangleFit([1, 2, 4], [1, 2, 6]) ➞ false

Notes:
Triangle fits if it has the same or smaller size as the hole.
The function should return false if the triangle with that dimensions is not possible.
*/
let triangleArea = (arr1) => {
    let s = 0;
    let area = 0;
    if ((arr1[0] + arr1[1]) <= arr1[2] || (arr1[0] + arr1[2]) <= arr1[1] || (arr1[1] + arr1[2]) <= arr1[0]) {
      area = false;
    } else {
      for (let i = 0; i < arr1.length; i++) {
        s += arr1[i];
      };      
      s = s / 2;      
      area = Math.sqrt ( s * (s - arr1[0]) * (s - arr1[1]) * (s - arr1[2]));
    }    
     return area;
};  

const doesTriangleFit = (arr1, arr2) => {
    let area1 = triangleArea(arr1);
    let area2 = triangleArea(arr2);

    if (area1 == false || area2 === false) {
        return false;
    } else if (area1 <= area2) {
        return true;
    }
};

console.log(doesTriangleFit([1, 1, 1], [1, 1, 1]));
console.log(doesTriangleFit([1, 1, 1], [2, 2, 2]));
console.log(doesTriangleFit([1, 2, 3], [1, 2, 2]));
console.log(doesTriangleFit([1, 2, 4], [1, 2, 6]));
